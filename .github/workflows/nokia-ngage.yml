name: Nokia N-Gage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout toolchain
      uses: actions/checkout@v4

    - name: Install Ninja
      run: choco install ninja --confirm
      shell: pwsh

    - name: Clone ngage-toolchain
      run: git clone https://github.com/ngagesdk/ngage-toolchain.git

    - name: Set up NGAGESDK environment variable
      run: |
        $ngagesdk = "${{ github.workspace }}/ngage-toolchain"
        $ngagesdk = $ngagesdk -replace '\\', '/'
        echo "NGAGESDK=$ngagesdk" >> $env:GITHUB_ENV
      shell: pwsh

    - name: Add runtime paths to PATH
      run: |
        echo "${{ env.NGAGESDK }}/sdk/sdk/6.1/Shared/EPOC32/gcc/bin" >> $env:GITHUB_PATH
        echo "${{ env.NGAGESDK }}/sdk/sdk/6.1/Shared/EPOC32/ngagesdk/bin" >> $env:GITHUB_PATH
      shell: pwsh

    - name: Verify directory structure
      run: |
        echo "NGAGESDK: ${{ env.NGAGESDK }}"
        ls ${{ env.NGAGESDK }}
        ls ${{ env.NGAGESDK }}/setup
      shell: pwsh

    - name: Fetch SDK
      run: cmake -G "Ninja" -P ${{ env.NGAGESDK }}/setup/setup.cmake
      shell: pwsh

    - name: Clone open8
      run: git clone https://github.com/ngagesdk/open8.git ${{ env.NGAGESDK }}/projects/open8
      shell: pwsh

    - name: Build open8
      run: |
        cmake -DCMAKE_PREFIX_PATH=${env.NGAGESDK}/sdk/extras/lib/cmake -G "Ninja" -S ${{ env.NGAGESDK }}/projects/open8 -DCMAKE_TOOLCHAIN_FILE=${{ env.NGAGESDK }}/cmake/ngage-toolchain.cmake
        cmake --build ${{ env.NGAGESDK }}/projects/open8/out/build/N-Gage
      shell: pwsh

    #- name: Archive open8.sis
    #  uses: actions/upload-artifact@v4
    #  with:
    #    name: open8.sis
    #    path: ${{ env.NGAGESDK }}/projects/open8/out/build/N-Gage/open8.sis
